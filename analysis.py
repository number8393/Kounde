import yfinance as yf
import pandas as pd
import random

def analyze_market(symbol: str):
    try:
        data = yf.download(
            tickers=symbol,
            interval="1m",
            period="1d",
            progress=False
        )

        if data.empty:
            return f"‚ùå –û—à–∏–±–∫–∞ {symbol}: –Ω–µ—Ç —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö."

        close_prices = data["Close"]
        volume = data["Volume"]

        # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑: –ø—Ä–æ–≤–µ—Ä–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É
        last_close = close_prices.iloc[-1]
        prev_close = close_prices.iloc[-2]

        direction = "üìâ –ü–ê–î–ï–ù–ò–ï" if last_close < prev_close else "üìà –†–û–°–¢"
        confidence = random.randint(60, 95)

        # –£—Å–ª–æ–≤–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ –≤—Ä–µ–º—è —Å–¥–µ–ª–∫–∏
        durations = {
            "2 –º–∏–Ω": random.randint(30, 70),
            "3 –º–∏–Ω": random.randint(40, 80),
            "4 –º–∏–Ω": random.randint(50, 90),
            "5 –º–∏–Ω": random.randint(60, 100)
        }
        best_duration = max(durations, key=durations.get)
        best_percent = durations[best_duration]

        message = (
            f"üìä –í–∞–ª—é—Ç–∞: {symbol}\n"
            f"{direction}\n"
            f"–¶–µ–Ω–∞: {round(last_close, 5)}\n"
            f"–û–±—ä—ë–º: {int(volume.iloc[-1])}\n"
            f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}%\n"
            f"‚è± –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å–¥–µ–ª–∫–∏: {best_duration} ({best_percent}%)"
        )

        return message

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ {symbol}: {e}"
